%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, January 24, 2016 2:01:29 PM EST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
1.00000 w
2 J
0 j
1.00000 0 0 RG
[ 1.00000 0 0 1.00000 4.00000 190.757 ] concat
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
S
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
f
[ 1.00000 0 0 1.00000 -4.00000 -190.757 ] concat
Q
q
2.00000 w
0 0 1.00000 RG
6.00000 5.02531 382.994 378.466 rc
newpath
385.994 194.757 m
385.891 182.429 l
385.634 171.743 l
385.158 159.819 l
384.481 147.963 l
383.610 136.360 l
382.627 125.821 l
381.433 115.170 l
380.011 104.479 l
378.406 94.1938 l
376.560 84.0453 l
374.772 75.5036 l
372.580 66.3702 l
370.191 57.7512 l
367.711 50.0033 l
365.312 43.4683 l
362.278 36.3490 l
359.557 30.8948 l
356.221 25.2417 l
353.117 20.8775 l
349.553 16.7999 l
346.007 13.6235 l
342.153 11.0574 l
338.480 9.38317 l
334.376 8.31646 l
329.963 8.02533 l
326.001 8.45062 l
321.599 9.61785 l
316.922 11.5909 l
312.224 14.2677 l
307.569 17.5503 l
302.277 21.9780 l
297.418 26.6427 l
292.126 32.3198 l
287.242 38.0655 l
281.812 44.9768 l
276.621 52.0551 l
271.117 60.0210 l
265.662 68.3389 l
259.880 77.5728 l
254.248 86.9384 l
248.429 96.9563 l
242.607 107.290 l
237.216 117.100 l
230.994 128.670 l
225.398 139.271 l
219.402 150.794 l
213.642 161.993 l
207.228 174.569 l
201.664 185.537 l
195.344 198.023 l
189.586 209.391 l
183.295 221.762 l
177.880 232.342 l
171.731 244.237 l
165.818 255.527 l
159.940 266.566 l
154.120 277.279 l
148.569 287.262 l
142.618 297.673 l
137.001 307.185 l
131.152 316.724 l
125.918 324.906 l
120.207 333.414 l
114.815 341.003 l
109.516 347.997 l
104.074 354.658 l
99.1498 360.186 l
94.1990 365.223 l
88.8470 370.027 l
84.1096 373.673 l
79.3764 376.695 l
74.6832 379.022 l
70.4807 380.491 l
66.1225 381.343 l
61.9258 381.456 l
57.5828 380.771 l
53.8796 379.475 l
49.7617 377.182 l
46.1919 374.387 l
42.7998 370.954 l
39.3113 366.537 l
35.9780 361.364 l
33.0958 356.033 l
30.1949 349.744 l
27.5256 343.005 l
24.8154 335.059 l
22.6265 327.674 l
20.2938 318.641 l
18.2799 309.646 l
16.4583 300.294 l
14.8093 290.527 l
13.3085 280.186 l
11.9189 268.851 l
10.8281 258.163 l
9.92434 247.377 l
9.14929 235.633 l
8.57349 223.742 l
8.22525 212.965 l
8.01949 200.121 l
8.01979 189.352 l
8.21953 176.782 l
8.61045 164.860 l
9.12447 154.319 l
9.88793 142.625 l
10.8539 131.074 l
12.0109 119.846 l
13.2569 109.715 l
14.7217 99.5493 l
16.4218 89.4230 l
18.3022 79.7623 l
20.4278 70.3183 l
22.4592 62.4466 l
24.9219 54.1200 l
27.5798 46.3639 l
30.3138 39.4939 l
32.9411 33.7927 l
36.2412 27.7061 l
39.1837 23.1585 l
42.7725 18.5924 l
46.0951 15.2157 l
49.8945 12.2444 l
53.6586 10.1397 l
57.7340 8.70617 l
61.6059 8.08075 l
65.9172 8.15045 l
70.5390 9.04037 l
74.6773 10.4903 l
79.2630 12.7562 l
84.1224 15.8514 l
88.9915 19.6086 l
93.8062 23.9162 l
99.2661 29.4535 l
104.269 35.0857 l
109.707 41.7609 l
114.715 48.3761 l
120.273 56.1964 l
125.577 64.0870 l
131.191 72.8542 l
136.745 81.9050 l
142.623 91.8497 l
148.338 101.842 l
154.232 112.440 l
160.121 123.287 l
165.566 133.511 l
171.839 145.485 l
177.474 156.384 l
183.502 168.157 l
189.284 179.528 l
201.280 203.219 l
207.595 215.668 l
213.340 226.933 l
219.607 239.117 l
224.994 249.474 l
231.101 261.046 l
236.966 271.955 l
242.786 282.548 l
248.540 292.753 l
254.020 302.190 l
259.884 311.949 l
265.411 320.784 l
271.155 329.552 l
276.287 336.989 l
281.876 344.623 l
287.145 351.331 l
292.311 357.404 l
297.607 363.065 l
302.390 367.639 l
307.188 371.671 l
312.364 375.336 l
316.934 377.930 l
321.490 379.860 l
325.995 381.064 l
330.019 381.491 l
334.180 381.230 l
338.175 380.239 l
342.296 378.378 l
345.798 376.053 l
349.677 372.588 l
353.027 368.753 l
356.195 364.313 l
359.439 358.839 l
362.521 352.639 l
365.170 346.406 l
367.819 339.196 l
370.239 331.600 l
372.675 322.774 l
374.624 314.672 l
376.677 304.869 l
378.425 295.207 l
379.980 285.250 l
381.361 274.936 l
382.586 264.098 l
383.680 252.307 l
384.500 241.266 l
385.134 230.195 l
385.620 218.216 l
385.906 206.165 l
385.994 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
8.00000 194.757 m
385.994 194.757 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
287 216 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
8.00000 194.757 m
8.00000 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 206 6 13 rc
newpath
16.7968 213.437 m
8.20312 213.437 l
8.20312 212.765 l
16.7968 212.765 l
16.7968 213.437 l
h
f
Q
newpath
15.5312 209.234 m
17.6250 208.218 l
17.8281 208.218 l
17.8281 215.484 l
17.8281 215.963 17.8489 216.263 17.8906 216.382  c
17.9322 216.502 18.0156 216.593 18.1406 216.656  c
18.2656 216.718 18.5208 216.755 18.9062 216.765  c
18.9062 217.000 l
15.6718 217.000 l
15.6718 216.765 l
16.0781 216.755 16.3411 216.718 16.4609 216.656  c
16.5807 216.593 16.6640 216.510 16.7109 216.406  c
16.7578 216.302 16.7812 215.994 16.7812 215.484  c
16.7812 210.843 l
16.7812 210.208 16.7604 209.802 16.7187 209.625  c
16.6875 209.489 16.6328 209.390 16.5546 209.328  c
16.4765 209.265 16.3802 209.234 16.2656 209.234  c
16.1093 209.234 15.8958 209.302 15.6250 209.437  c
15.5312 209.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
102.498 194.757 m
102.498 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
95 206 6 13 rc
newpath
105.796 213.437 m
97.2031 213.437 l
97.2031 212.765 l
105.796 212.765 l
105.796 213.437 l
h
f
Q
newpath
103.468 212.750 m
103.468 211.770 103.617 210.924 103.914 210.210  c
104.210 209.497 104.604 208.968 105.093 208.625  c
105.479 208.354 105.875 208.218 106.281 208.218  c
106.937 208.218 107.526 208.552 108.046 209.218  c
108.703 210.052 109.031 211.182 109.031 212.609  c
109.031 213.609 108.888 214.458 108.601 215.156  c
108.315 215.854 107.947 216.362 107.500 216.679  c
107.052 216.997 106.625 217.156 106.218 217.156  c
105.395 217.156 104.708 216.671 104.156 215.703  c
103.697 214.880 103.468 213.895 103.468 212.750  c
h
104.718 212.906 m
104.718 214.093 104.864 215.062 105.156 215.812  c
105.395 216.437 105.755 216.750 106.234 216.750  c
106.463 216.750 106.700 216.648 106.945 216.445  c
107.190 216.242 107.375 215.895 107.500 215.406  c
107.697 214.687 107.796 213.661 107.796 212.328  c
107.796 211.349 107.692 210.531 107.484 209.875  c
107.338 209.385 107.140 209.041 106.890 208.843  c
106.724 208.708 106.515 208.640 106.265 208.640  c
105.984 208.640 105.729 208.765 105.500 209.015  c
105.197 209.369 104.992 209.924 104.882 210.679  c
104.773 211.434 104.718 212.177 104.718 212.906  c
h
111.125 215.765 m
111.322 215.765 111.489 215.835 111.625 215.976  c
111.760 216.117 111.828 216.281 111.828 216.468  c
111.828 216.666 111.760 216.833 111.625 216.968  c
111.489 217.104 111.322 217.171 111.125 217.171  c
110.927 217.171 110.760 217.104 110.625 216.968  c
110.489 216.833 110.421 216.666 110.421 216.468  c
110.421 216.270 110.489 216.104 110.625 215.968  c
110.760 215.833 110.927 215.765 111.125 215.765  c
h
118.390 208.390 m
117.890 209.468 l
115.312 209.468 l
114.750 210.625 l
115.864 210.791 116.750 211.208 117.406 211.875  c
117.968 212.447 118.250 213.125 118.250 213.906  c
118.250 214.364 118.158 214.786 117.976 215.171  c
117.794 215.557 117.562 215.885 117.281 216.156  c
117.000 216.427 116.687 216.640 116.343 216.796  c
115.864 217.036 115.364 217.156 114.843 217.156  c
114.333 217.156 113.960 217.067 113.726 216.890  c
113.492 216.713 113.375 216.520 113.375 216.312  c
113.375 216.187 113.424 216.080 113.523 215.992  c
113.622 215.903 113.744 215.859 113.890 215.859  c
113.994 215.859 114.088 215.875 114.171 215.906  c
114.255 215.937 114.395 216.026 114.593 216.171  c
114.916 216.390 115.239 216.500 115.562 216.500  c
116.062 216.500 116.497 216.312 116.867 215.937  c
117.237 215.562 117.421 215.104 117.421 214.562  c
117.421 214.041 117.255 213.557 116.921 213.109  c
116.588 212.661 116.130 212.312 115.546 212.062  c
115.078 211.875 114.447 211.765 113.656 211.734  c
115.312 208.390 l
118.390 208.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 194.757 m
196.997 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
193.468 210.750 m
193.468 209.770 193.617 208.924 193.914 208.210  c
194.210 207.497 194.604 206.968 195.093 206.625  c
195.479 206.354 195.875 206.218 196.281 206.218  c
196.937 206.218 197.526 206.552 198.046 207.218  c
198.703 208.052 199.031 209.182 199.031 210.609  c
199.031 211.609 198.888 212.458 198.601 213.156  c
198.315 213.854 197.947 214.362 197.500 214.679  c
197.052 214.997 196.625 215.156 196.218 215.156  c
195.395 215.156 194.708 214.671 194.156 213.703  c
193.697 212.880 193.468 211.895 193.468 210.750  c
h
194.718 210.906 m
194.718 212.093 194.864 213.062 195.156 213.812  c
195.395 214.437 195.755 214.750 196.234 214.750  c
196.463 214.750 196.700 214.648 196.945 214.445  c
197.190 214.242 197.375 213.895 197.500 213.406  c
197.697 212.687 197.796 211.661 197.796 210.328  c
197.796 209.349 197.692 208.531 197.484 207.875  c
197.338 207.385 197.140 207.041 196.890 206.843  c
196.724 206.708 196.515 206.640 196.265 206.640  c
195.984 206.640 195.729 206.765 195.500 207.015  c
195.197 207.369 194.992 207.924 194.882 208.679  c
194.773 209.434 194.718 210.177 194.718 210.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
291.496 194.757 m
291.496 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
288.468 212.750 m
288.468 211.770 288.617 210.924 288.914 210.210  c
289.210 209.497 289.604 208.968 290.093 208.625  c
290.479 208.354 290.875 208.218 291.281 208.218  c
291.937 208.218 292.526 208.552 293.046 209.218  c
293.703 210.052 294.031 211.182 294.031 212.609  c
294.031 213.609 293.888 214.458 293.601 215.156  c
293.315 215.854 292.947 216.362 292.500 216.679  c
292.052 216.997 291.625 217.156 291.218 217.156  c
290.395 217.156 289.708 216.671 289.156 215.703  c
288.697 214.880 288.468 213.895 288.468 212.750  c
h
289.718 212.906 m
289.718 214.093 289.864 215.062 290.156 215.812  c
290.395 216.437 290.755 216.750 291.234 216.750  c
291.463 216.750 291.700 216.648 291.945 216.445  c
292.190 216.242 292.375 215.895 292.500 215.406  c
292.697 214.687 292.796 213.661 292.796 212.328  c
292.796 211.349 292.692 210.531 292.484 209.875  c
292.338 209.385 292.140 209.041 291.890 208.843  c
291.724 208.708 291.515 208.640 291.265 208.640  c
290.984 208.640 290.729 208.765 290.500 209.015  c
290.197 209.369 289.992 209.924 289.882 210.679  c
289.773 211.434 289.718 212.177 289.718 212.906  c
h
296.125 215.765 m
296.322 215.765 296.489 215.835 296.625 215.976  c
296.760 216.117 296.828 216.281 296.828 216.468  c
296.828 216.666 296.760 216.833 296.625 216.968  c
296.489 217.104 296.322 217.171 296.125 217.171  c
295.927 217.171 295.760 217.104 295.625 216.968  c
295.489 216.833 295.421 216.666 295.421 216.468  c
295.421 216.270 295.489 216.104 295.625 215.968  c
295.760 215.833 295.927 215.765 296.125 215.765  c
h
303.390 208.390 m
302.890 209.468 l
300.312 209.468 l
299.750 210.625 l
300.864 210.791 301.750 211.208 302.406 211.875  c
302.968 212.447 303.250 213.125 303.250 213.906  c
303.250 214.364 303.158 214.786 302.976 215.171  c
302.794 215.557 302.562 215.885 302.281 216.156  c
302.000 216.427 301.687 216.640 301.343 216.796  c
300.864 217.036 300.364 217.156 299.843 217.156  c
299.333 217.156 298.960 217.067 298.726 216.890  c
298.492 216.713 298.375 216.520 298.375 216.312  c
298.375 216.187 298.424 216.080 298.523 215.992  c
298.622 215.903 298.744 215.859 298.890 215.859  c
298.994 215.859 299.088 215.875 299.171 215.906  c
299.255 215.937 299.395 216.026 299.593 216.171  c
299.916 216.390 300.239 216.500 300.562 216.500  c
301.062 216.500 301.497 216.312 301.867 215.937  c
302.237 215.562 302.421 215.104 302.421 214.562  c
302.421 214.041 302.255 213.557 301.921 213.109  c
301.588 212.661 301.130 212.312 300.546 212.062  c
300.078 211.875 299.447 211.765 298.656 211.734  c
300.312 208.390 l
303.390 208.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
385.994 194.757 m
385.994 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
388.531 209.234 m
390.625 208.218 l
390.828 208.218 l
390.828 215.484 l
390.828 215.963 390.849 216.263 390.890 216.382  c
390.932 216.502 391.015 216.593 391.140 216.656  c
391.265 216.718 391.520 216.755 391.906 216.765  c
391.906 217.000 l
388.671 217.000 l
388.671 216.765 l
389.078 216.755 389.341 216.718 389.460 216.656  c
389.580 216.593 389.664 216.510 389.710 216.406  c
389.757 216.302 389.781 215.994 389.781 215.484  c
389.781 210.843 l
389.781 210.208 389.760 209.802 389.718 209.625  c
389.687 209.489 389.632 209.390 389.554 209.328  c
389.476 209.265 389.380 209.234 389.265 209.234  c
389.109 209.234 388.895 209.302 388.625 209.437  c
388.531 209.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
26.8997 194.757 m
26.8997 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
45.7994 194.757 m
45.7994 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
64.6992 194.757 m
64.6992 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
83.5989 194.757 m
83.5989 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
121.398 194.757 m
121.398 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
140.298 194.757 m
140.298 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
159.197 194.757 m
159.197 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
178.097 194.757 m
178.097 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
215.897 194.757 m
215.897 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
234.796 194.757 m
234.796 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
253.696 194.757 m
253.696 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
272.596 194.757 m
272.596 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
310.395 194.757 m
310.395 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
329.295 194.757 m
329.295 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
348.195 194.757 m
348.195 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
367.095 194.757 m
367.095 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
196.997 381.491 m
196.997 8.02533 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
153 94 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
196.997 381.499 m
192.997 381.499 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
180 380 6 13 rc
newpath
190.796 387.437 m
182.203 387.437 l
182.203 386.765 l
190.796 386.765 l
190.796 387.437 l
h
f
Q
newpath
189.531 383.234 m
191.625 382.218 l
191.828 382.218 l
191.828 389.484 l
191.828 389.963 191.849 390.263 191.890 390.382  c
191.932 390.502 192.015 390.593 192.140 390.656  c
192.265 390.718 192.520 390.755 192.906 390.765  c
192.906 391.000 l
189.671 391.000 l
189.671 390.765 l
190.078 390.755 190.341 390.718 190.460 390.656  c
190.580 390.593 190.664 390.510 190.710 390.406  c
190.757 390.302 190.781 389.994 190.781 389.484  c
190.781 384.843 l
190.781 384.208 190.760 383.802 190.718 383.625  c
190.687 383.489 190.632 383.390 190.554 383.328  c
190.476 383.265 190.380 383.234 190.265 383.234  c
190.109 383.234 189.895 383.302 189.625 383.437  c
189.531 383.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 288.128 m
192.997 288.128 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
170 287 6 13 rc
newpath
180.796 294.437 m
172.203 294.437 l
172.203 293.765 l
180.796 293.765 l
180.796 294.437 l
h
f
Q
newpath
178.468 293.750 m
178.468 292.770 178.617 291.924 178.914 291.210  c
179.210 290.497 179.604 289.968 180.093 289.625  c
180.479 289.354 180.875 289.218 181.281 289.218  c
181.937 289.218 182.526 289.552 183.046 290.218  c
183.703 291.052 184.031 292.182 184.031 293.609  c
184.031 294.609 183.888 295.458 183.601 296.156  c
183.315 296.854 182.947 297.362 182.500 297.679  c
182.052 297.997 181.625 298.156 181.218 298.156  c
180.395 298.156 179.708 297.671 179.156 296.703  c
178.697 295.880 178.468 294.895 178.468 293.750  c
h
179.718 293.906 m
179.718 295.093 179.864 296.062 180.156 296.812  c
180.395 297.437 180.755 297.750 181.234 297.750  c
181.463 297.750 181.700 297.648 181.945 297.445  c
182.190 297.242 182.375 296.895 182.500 296.406  c
182.697 295.687 182.796 294.661 182.796 293.328  c
182.796 292.349 182.692 291.531 182.484 290.875  c
182.338 290.385 182.140 290.041 181.890 289.843  c
181.724 289.708 181.515 289.640 181.265 289.640  c
180.984 289.640 180.729 289.765 180.500 290.015  c
180.197 290.369 179.992 290.924 179.882 291.679  c
179.773 292.434 179.718 293.177 179.718 293.906  c
h
186.125 296.765 m
186.322 296.765 186.489 296.835 186.625 296.976  c
186.760 297.117 186.828 297.281 186.828 297.468  c
186.828 297.666 186.760 297.833 186.625 297.968  c
186.489 298.104 186.322 298.171 186.125 298.171  c
185.927 298.171 185.760 298.104 185.625 297.968  c
185.489 297.833 185.421 297.666 185.421 297.468  c
185.421 297.270 185.489 297.104 185.625 296.968  c
185.760 296.833 185.927 296.765 186.125 296.765  c
h
193.390 289.390 m
192.890 290.468 l
190.312 290.468 l
189.750 291.625 l
190.864 291.791 191.750 292.208 192.406 292.875  c
192.968 293.447 193.250 294.125 193.250 294.906  c
193.250 295.364 193.158 295.786 192.976 296.171  c
192.794 296.557 192.562 296.885 192.281 297.156  c
192.000 297.427 191.687 297.640 191.343 297.796  c
190.864 298.036 190.364 298.156 189.843 298.156  c
189.333 298.156 188.960 298.067 188.726 297.890  c
188.492 297.713 188.375 297.520 188.375 297.312  c
188.375 297.187 188.424 297.080 188.523 296.992  c
188.622 296.903 188.744 296.859 188.890 296.859  c
188.994 296.859 189.088 296.875 189.171 296.906  c
189.255 296.937 189.395 297.026 189.593 297.171  c
189.916 297.390 190.239 297.500 190.562 297.500  c
191.062 297.500 191.497 297.312 191.867 296.937  c
192.237 296.562 192.421 296.104 192.421 295.562  c
192.421 295.041 192.255 294.557 191.921 294.109  c
191.588 293.661 191.130 293.312 190.546 293.062  c
190.078 292.875 189.447 292.765 188.656 292.734  c
190.312 289.390 l
193.390 289.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 194.757 m
192.997 194.757 l
S
Q
q
0 w
newpath
196.997 101.386 m
192.997 101.386 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.468 106.750 m
178.468 105.770 178.617 104.924 178.914 104.210  c
179.210 103.497 179.604 102.968 180.093 102.625  c
180.479 102.354 180.875 102.218 181.281 102.218  c
181.937 102.218 182.526 102.552 183.046 103.218  c
183.703 104.052 184.031 105.182 184.031 106.609  c
184.031 107.609 183.888 108.458 183.601 109.156  c
183.315 109.854 182.947 110.362 182.500 110.679  c
182.052 110.997 181.625 111.156 181.218 111.156  c
180.395 111.156 179.708 110.671 179.156 109.703  c
178.697 108.880 178.468 107.895 178.468 106.750  c
h
179.718 106.906 m
179.718 108.093 179.864 109.062 180.156 109.812  c
180.395 110.437 180.755 110.750 181.234 110.750  c
181.463 110.750 181.700 110.648 181.945 110.445  c
182.190 110.242 182.375 109.895 182.500 109.406  c
182.697 108.687 182.796 107.661 182.796 106.328  c
182.796 105.349 182.692 104.531 182.484 103.875  c
182.338 103.385 182.140 103.041 181.890 102.843  c
181.724 102.708 181.515 102.640 181.265 102.640  c
180.984 102.640 180.729 102.765 180.500 103.015  c
180.197 103.369 179.992 103.924 179.882 104.679  c
179.773 105.434 179.718 106.177 179.718 106.906  c
h
186.125 109.765 m
186.322 109.765 186.489 109.835 186.625 109.976  c
186.760 110.117 186.828 110.281 186.828 110.468  c
186.828 110.666 186.760 110.833 186.625 110.968  c
186.489 111.104 186.322 111.171 186.125 111.171  c
185.927 111.171 185.760 111.104 185.625 110.968  c
185.489 110.833 185.421 110.666 185.421 110.468  c
185.421 110.270 185.489 110.104 185.625 109.968  c
185.760 109.833 185.927 109.765 186.125 109.765  c
h
193.390 102.390 m
192.890 103.468 l
190.312 103.468 l
189.750 104.625 l
190.864 104.791 191.750 105.208 192.406 105.875  c
192.968 106.447 193.250 107.125 193.250 107.906  c
193.250 108.364 193.158 108.786 192.976 109.171  c
192.794 109.557 192.562 109.885 192.281 110.156  c
192.000 110.427 191.687 110.640 191.343 110.796  c
190.864 111.036 190.364 111.156 189.843 111.156  c
189.333 111.156 188.960 111.067 188.726 110.890  c
188.492 110.713 188.375 110.520 188.375 110.312  c
188.375 110.187 188.424 110.080 188.523 109.992  c
188.622 109.903 188.744 109.859 188.890 109.859  c
188.994 109.859 189.088 109.875 189.171 109.906  c
189.255 109.937 189.395 110.026 189.593 110.171  c
189.916 110.390 190.239 110.500 190.562 110.500  c
191.062 110.500 191.497 110.312 191.867 109.937  c
192.237 109.562 192.421 109.104 192.421 108.562  c
192.421 108.041 192.255 107.557 191.921 107.109  c
191.588 106.661 191.130 106.312 190.546 106.062  c
190.078 105.875 189.447 105.765 188.656 105.734  c
190.312 102.390 l
193.390 102.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 8.01583 m
192.997 8.01583 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.531 10.2343 m
191.625 9.21875 l
191.828 9.21875 l
191.828 16.4843 l
191.828 16.9635 191.849 17.2630 191.890 17.3828  c
191.932 17.5026 192.015 17.5937 192.140 17.6562  c
192.265 17.7187 192.520 17.7552 192.906 17.7656  c
192.906 18.0000 l
189.671 18.0000 l
189.671 17.7656 l
190.078 17.7552 190.341 17.7187 190.460 17.6562  c
190.580 17.5937 190.664 17.5104 190.710 17.4062  c
190.757 17.3020 190.781 16.9947 190.781 16.4843  c
190.781 11.8437 l
190.781 11.2083 190.760 10.8020 190.718 10.6250  c
190.687 10.4895 190.632 10.3906 190.554 10.3281  c
190.476 10.2656 190.380 10.2343 190.265 10.2343  c
190.109 10.2343 189.895 10.3020 189.625 10.4375  c
189.531 10.2343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 362.825 m
194.997 362.825 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 344.151 m
194.997 344.151 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 325.477 m
194.997 325.477 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 306.803 m
194.997 306.803 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 269.454 m
194.997 269.454 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 250.780 m
194.997 250.780 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 232.106 m
194.997 232.106 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 213.432 m
194.997 213.432 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 176.083 m
194.997 176.083 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 157.409 m
194.997 157.409 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 138.735 m
194.997 138.735 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 120.061 m
194.997 120.061 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 82.7126 m
194.997 82.7126 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 64.0384 m
194.997 64.0384 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 45.3642 m
194.997 45.3642 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 26.6900 m
194.997 26.6900 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
