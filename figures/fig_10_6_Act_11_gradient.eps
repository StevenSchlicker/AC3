%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, August 19, 2015 3:00:27 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
31.0000 7.01704 355.994 345.982 rc
newpath
278.393 96.1912 m
297.246 94.2627 l
284.347 107.762 l
278.393 96.1912 l
278.393 96.1912 l
278.393 96.1912 l
h
f
newpath
120.344 181.665 m
119.153 179.351 l
280.774 100.819 l
281.965 103.133 l
120.344 181.665 l
120.344 181.665 l
120.344 181.665 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
31.0000 7.01704 355.994 345.982 rc
newpath
284.347 253.254 m
297.246 266.754 l
278.393 264.825 l
284.347 253.254 l
284.347 253.254 l
284.347 253.254 l
h
f
newpath
119.153 181.665 m
120.344 179.351 l
281.965 257.883 l
280.774 260.197 l
119.153 181.665 l
119.153 181.665 l
119.153 181.665 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
31.0000 7.01704 355.994 345.982 rc
newpath
119.153 181.665 m
120.344 179.351 l
183.847 210.207 l
182.656 212.521 l
119.153 181.665 l
119.153 181.665 l
119.153 181.665 l
h
f
newpath
186.228 205.579 m
199.128 219.078 l
180.275 217.150 l
186.228 205.579 l
186.228 205.579 l
186.228 205.579 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
31.0000 7.01704 355.994 345.982 rc
newpath
74.2514 233.870 m
56.9939 241.493 l
64.8382 224.722 l
74.2514 233.870 l
74.2514 233.870 l
74.2514 233.870 l
h
f
newpath
118.807 179.593 m
120.690 181.423 l
70.4861 230.211 l
68.6035 228.381 l
118.807 179.593 l
118.807 179.593 l
118.807 179.593 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
30.0000 6.01704 357.994 347.982 rc
newpath
118.807 179.593 m
120.690 181.423 l
70.4861 230.211 l
74.2514 233.870 l
56.9939 241.493 l
64.8382 224.722 l
68.6035 228.381 l
118.807 179.593 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
30.0000 6.01704 357.994 347.982 rc
newpath
119.153 181.665 m
120.344 179.351 l
183.847 210.207 l
186.228 205.579 l
199.128 219.078 l
180.275 217.150 l
182.656 212.521 l
119.153 181.665 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
30.0000 6.01704 357.994 347.982 rc
newpath
119.153 181.665 m
120.344 179.351 l
281.965 257.883 l
284.347 253.254 l
297.246 266.754 l
278.393 264.825 l
280.774 260.197 l
119.153 181.665 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
30.0000 6.01704 357.994 347.982 rc
newpath
120.344 181.665 m
119.153 179.351 l
280.774 100.819 l
278.393 96.1912 l
297.246 94.2627 l
284.347 107.762 l
281.965 103.133 l
120.344 181.665 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
30.0000 6.01704 357.994 347.982 rc
newpath
31.0000 353.000 m
385.994 353.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
2 J
0 j
[ 1.00000 0 0 1.00000 115.748 176.508 ] concat
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
S
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
f
[ 1.00000 0 0 1.00000 -115.748 -176.508 ] concat
Q
q
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
40 229 16 23 rc
newpath
52.1562 248.000 m
44.2031 248.000 l
44.2031 247.781 l
49.2187 239.468 l
47.7656 239.468 l
47.1302 239.468 46.6770 239.526 46.4062 239.640  c
46.1354 239.755 45.9140 239.937 45.7421 240.187  c
45.5703 240.437 45.3958 240.885 45.2187 241.531  c
44.8750 241.531 l
44.8750 238.875 l
52.5625 238.875 l
52.5625 239.125 l
47.5781 247.375 l
48.2031 247.375 l
49.4531 247.375 50.3541 247.195 50.9062 246.835  c
51.4583 246.476 51.8750 245.822 52.1562 244.875  c
52.4218 244.875 l
52.1562 248.000 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
297 255 18 23 rc
newpath
305.796 274.281 m
302.718 267.187 l
302.343 266.333 302.052 265.796 301.843 265.578  c
301.697 265.401 301.479 265.286 301.187 265.234  c
301.187 264.875 l
306.046 264.875 l
306.046 265.234 l
305.734 265.234 305.526 265.286 305.421 265.390  c
305.265 265.536 305.187 265.708 305.187 265.906  c
305.187 266.145 305.328 266.599 305.609 267.265  c
307.109 270.687 l
308.312 267.734 l
308.656 266.880 308.828 266.281 308.828 265.937  c
308.828 265.729 308.755 265.562 308.609 265.437  c
308.463 265.312 308.208 265.244 307.843 265.234  c
307.843 264.875 l
310.828 264.875 l
310.828 265.234 l
310.536 265.265 310.299 265.369 310.117 265.546  c
309.934 265.724 309.661 266.244 309.296 267.109  c
306.250 274.281 l
305.796 274.281 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
199 196 22 23 rc
newpath
212.734 215.281 m
210.234 208.578 l
207.781 215.281 l
207.265 215.281 l
204.843 208.656 l
204.479 207.645 204.166 206.984 203.906 206.671  c
203.750 206.463 203.505 206.317 203.171 206.234  c
203.171 205.875 l
207.781 205.875 l
207.781 206.234 l
207.468 206.234 207.252 206.278 207.132 206.367  c
207.013 206.455 206.953 206.557 206.953 206.671  c
206.953 206.786 207.057 207.119 207.265 207.671  c
208.609 211.234 l
209.890 207.671 l
209.796 207.437 l
209.599 206.947 209.427 206.638 209.281 206.507  c
209.135 206.377 208.911 206.286 208.609 206.234  c
208.609 205.875 l
213.281 205.875 l
213.281 206.234 l
212.916 206.255 212.684 206.304 212.585 206.382  c
212.487 206.460 212.437 206.578 212.437 206.734  c
212.437 206.869 212.536 207.182 212.734 207.671  c
214.015 211.234 l
215.187 207.953 l
215.354 207.484 215.437 207.166 215.437 207.000  c
215.437 206.750 215.377 206.565 215.257 206.445  c
215.138 206.325 214.895 206.255 214.531 206.234  c
214.531 205.875 l
217.234 205.875 l
217.234 206.234 l
216.942 206.265 216.708 206.369 216.531 206.546  c
216.354 206.724 216.125 207.213 215.843 208.015  c
213.281 215.281 l
212.734 215.281 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
31.0000 353.000 m
385.994 353.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
202 374 13 15 rc
newpath
208.250 380.250 m
208.458 380.468 208.614 380.692 208.718 380.921  c
208.802 381.067 208.927 381.463 209.093 382.109  c
209.656 381.281 l
209.802 381.072 209.981 380.877 210.195 380.695  c
210.408 380.513 210.593 380.385 210.750 380.312  c
210.854 380.270 210.968 380.250 211.093 380.250  c
211.270 380.250 211.414 380.299 211.523 380.398  c
211.632 380.497 211.687 380.614 211.687 380.750  c
211.687 380.916 211.656 381.031 211.593 381.093  c
211.479 381.197 211.343 381.250 211.187 381.250  c
211.093 381.250 211.000 381.229 210.906 381.187  c
210.708 381.125 210.572 381.093 210.500 381.093  c
210.395 381.093 210.276 381.151 210.140 381.265  c
209.880 381.484 209.567 381.911 209.203 382.546  c
209.718 384.718 l
209.802 385.052 209.869 385.252 209.921 385.320  c
209.974 385.388 210.031 385.421 210.093 385.421  c
210.177 385.421 210.281 385.375 210.406 385.281  c
210.635 385.083 210.833 384.828 211.000 384.515  c
211.218 384.625 l
210.947 385.125 210.609 385.541 210.203 385.875  c
209.974 386.062 209.776 386.156 209.609 386.156  c
209.369 386.156 209.182 386.020 209.046 385.750  c
208.953 385.583 208.770 384.875 208.500 383.625  c
207.833 384.770 207.302 385.505 206.906 385.828  c
206.645 386.046 206.395 386.156 206.156 386.156  c
205.989 386.156 205.833 386.093 205.687 385.968  c
205.593 385.875 205.546 385.750 205.546 385.593  c
205.546 385.458 205.593 385.343 205.687 385.250  c
205.781 385.156 205.895 385.109 206.031 385.109  c
206.166 385.109 206.307 385.177 206.453 385.312  c
206.567 385.406 206.656 385.453 206.718 385.453  c
206.760 385.453 206.822 385.421 206.906 385.359  c
207.104 385.192 207.375 384.843 207.718 384.312  c
208.062 383.781 208.286 383.395 208.390 383.156  c
208.130 382.125 207.989 381.583 207.968 381.531  c
207.875 381.250 207.750 381.052 207.593 380.937  c
207.437 380.822 207.203 380.765 206.890 380.765  c
206.796 380.765 206.687 380.770 206.562 380.781  c
206.562 380.546 l
208.250 380.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
31.0000 353.000 m
31.0000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.4687 371.750 m
33.4687 370.770 33.6171 369.924 33.9140 369.210  c
34.2109 368.497 34.6041 367.968 35.0937 367.625  c
35.4791 367.354 35.8750 367.218 36.2812 367.218  c
36.9375 367.218 37.5260 367.552 38.0468 368.218  c
38.7031 369.052 39.0312 370.182 39.0312 371.609  c
39.0312 372.609 38.8880 373.458 38.6015 374.156  c
38.3151 374.854 37.9479 375.362 37.5000 375.679  c
37.0520 375.997 36.6250 376.156 36.2187 376.156  c
35.3958 376.156 34.7083 375.671 34.1562 374.703  c
33.6979 373.880 33.4687 372.895 33.4687 371.750  c
h
34.7187 371.906 m
34.7187 373.093 34.8645 374.062 35.1562 374.812  c
35.3958 375.437 35.7552 375.750 36.2343 375.750  c
36.4635 375.750 36.7005 375.648 36.9453 375.445  c
37.1901 375.242 37.3750 374.895 37.5000 374.406  c
37.6979 373.687 37.7968 372.661 37.7968 371.328  c
37.7968 370.349 37.6927 369.531 37.4843 368.875  c
37.3385 368.385 37.1406 368.041 36.8906 367.843  c
36.7239 367.708 36.5156 367.640 36.2656 367.640  c
35.9843 367.640 35.7291 367.765 35.5000 368.015  c
35.1979 368.369 34.9921 368.924 34.8828 369.679  c
34.7734 370.434 34.7187 371.177 34.7187 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
119.748 353.000 m
119.748 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
122.531 368.234 m
124.625 367.218 l
124.828 367.218 l
124.828 374.484 l
124.828 374.963 124.849 375.263 124.890 375.382  c
124.932 375.502 125.015 375.593 125.140 375.656  c
125.265 375.718 125.520 375.755 125.906 375.765  c
125.906 376.000 l
122.671 376.000 l
122.671 375.765 l
123.078 375.755 123.341 375.718 123.460 375.656  c
123.580 375.593 123.664 375.510 123.710 375.406  c
123.757 375.302 123.781 374.994 123.781 374.484  c
123.781 369.843 l
123.781 369.208 123.760 368.802 123.718 368.625  c
123.687 368.489 123.632 368.390 123.554 368.328  c
123.476 368.265 123.380 368.234 123.265 368.234  c
123.109 368.234 122.895 368.302 122.625 368.437  c
122.531 368.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
208.497 353.000 m
208.497 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
215.953 374.343 m
215.359 376.000 l
210.281 376.000 l
210.281 375.765 l
211.770 374.401 212.820 373.286 213.429 372.421  c
214.039 371.557 214.343 370.770 214.343 370.062  c
214.343 369.510 214.177 369.059 213.843 368.710  c
213.510 368.362 213.109 368.187 212.640 368.187  c
212.224 368.187 211.846 368.309 211.507 368.554  c
211.169 368.799 210.921 369.161 210.765 369.640  c
210.531 369.640 l
210.635 368.859 210.906 368.260 211.343 367.843  c
211.781 367.427 212.328 367.218 212.984 367.218  c
213.682 367.218 214.265 367.442 214.734 367.890  c
215.203 368.338 215.437 368.864 215.437 369.468  c
215.437 369.906 215.333 370.343 215.125 370.781  c
214.812 371.468 214.307 372.192 213.609 372.953  c
212.557 374.109 211.895 374.807 211.625 375.046  c
213.875 375.046 l
214.333 375.046 214.653 375.028 214.835 374.992  c
215.018 374.955 215.184 374.885 215.335 374.781  c
215.487 374.677 215.614 374.531 215.718 374.343  c
215.953 374.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
297.246 353.000 m
297.246 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
299.656 369.031 m
299.906 368.447 300.218 368.000 300.593 367.687  c
300.968 367.375 301.432 367.218 301.984 367.218  c
302.682 367.218 303.213 367.442 303.578 367.890  c
303.859 368.224 304.000 368.578 304.000 368.953  c
304.000 369.588 303.604 370.239 302.812 370.906  c
303.343 371.114 303.744 371.411 304.015 371.796  c
304.286 372.182 304.421 372.635 304.421 373.156  c
304.421 373.895 304.182 374.536 303.703 375.078  c
303.088 375.796 302.197 376.156 301.031 376.156  c
300.447 376.156 300.052 376.083 299.843 375.937  c
299.635 375.791 299.531 375.635 299.531 375.468  c
299.531 375.343 299.580 375.237 299.679 375.148  c
299.778 375.059 299.895 375.015 300.031 375.015  c
300.135 375.015 300.244 375.031 300.359 375.062  c
300.432 375.083 300.596 375.158 300.851 375.289  c
301.106 375.419 301.281 375.500 301.375 375.531  c
301.531 375.572 301.697 375.593 301.875 375.593  c
302.302 375.593 302.677 375.427 303.000 375.093  c
303.322 374.760 303.484 374.364 303.484 373.906  c
303.484 373.572 303.411 373.250 303.265 372.937  c
303.151 372.697 303.026 372.515 302.890 372.390  c
302.713 372.224 302.466 372.072 302.148 371.937  c
301.830 371.802 301.505 371.734 301.171 371.734  c
300.968 371.734 l
300.968 371.531 l
301.302 371.489 301.638 371.369 301.976 371.171  c
302.315 370.974 302.559 370.737 302.710 370.460  c
302.862 370.184 302.937 369.875 302.937 369.531  c
302.937 369.104 302.802 368.755 302.531 368.484  c
302.260 368.213 301.921 368.078 301.515 368.078  c
300.859 368.078 300.312 368.427 299.875 369.125  c
299.656 369.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
385.994 353.000 m
385.994 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
393.046 372.828 m
393.046 373.734 l
391.890 373.734 l
391.890 376.000 l
390.843 376.000 l
390.843 373.734 l
387.203 373.734 l
387.203 372.921 l
391.203 367.218 l
391.890 367.218 l
391.890 372.828 l
393.046 372.828 l
h
390.843 372.828 m
390.843 368.546 l
387.828 372.828 l
390.843 372.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
75.3743 353.000 m
75.3743 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
164.123 353.000 m
164.123 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
252.871 353.000 m
252.871 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
341.620 353.000 m
341.620 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
31.0000 353.000 m
31.0000 8.01705 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 173 13 15 rc
newpath
7.07812 179.250 m
7.22395 179.500 7.32291 179.731 7.37500 179.945  c
7.42708 180.158 7.48437 180.578 7.54687 181.203  c
7.81250 184.328 l
8.07291 184.026 8.44270 183.541 8.92187 182.875  c
9.15104 182.552 9.43750 182.114 9.78125 181.562  c
9.98958 181.229 10.1197 180.994 10.1718 180.859  c
10.1927 180.786 10.2031 180.713 10.2031 180.640  c
10.2031 180.599 10.1875 180.562 10.1562 180.531  c
10.1250 180.500 10.0468 180.463 9.92187 180.421  c
9.79687 180.380 9.69531 180.307 9.61718 180.203  c
9.53906 180.099 9.50000 179.974 9.50000 179.828  c
9.50000 179.661 9.54947 179.523 9.64843 179.414  c
9.74739 179.304 9.87500 179.250 10.0312 179.250  c
10.2187 179.250 10.3776 179.328 10.5078 179.484  c
10.6380 179.640 10.7031 179.854 10.7031 180.125  c
10.7031 180.458 10.5885 180.841 10.3593 181.273  c
10.1302 181.705 9.69010 182.364 9.03906 183.250  c
8.38802 184.135 7.59895 185.104 6.67187 186.156  c
6.03645 186.875 5.56250 187.330 5.25000 187.523  c
4.93750 187.716 4.67187 187.812 4.45312 187.812  c
4.31770 187.812 4.20052 187.760 4.10156 187.656  c
4.00260 187.552 3.95312 187.437 3.95312 187.312  c
3.95312 187.145 4.02343 186.994 4.16406 186.859  c
4.30468 186.724 4.45312 186.656 4.60937 186.656  c
4.69270 186.656 4.76562 186.677 4.82812 186.718  c
4.85937 186.739 4.89583 186.799 4.93750 186.898  c
4.97916 186.997 5.01562 187.062 5.04687 187.093  c
5.06770 187.114 5.09375 187.125 5.12500 187.125  c
5.14583 187.125 5.18750 187.104 5.25000 187.062  c
5.48958 186.916 5.76041 186.687 6.06250 186.375  c
6.46875 185.958 6.77083 185.619 6.96875 185.359  c
6.60937 181.343 l
6.55729 180.677 6.47135 180.270 6.35156 180.125  c
6.23177 179.979 6.03125 179.906 5.75000 179.906  c
5.65625 179.906 5.49479 179.921 5.26562 179.953  c
5.21875 179.718 l
7.07812 179.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
31.0000 353.000 m
27.0000 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
23.4687 358.750 m
23.4687 357.770 23.6171 356.924 23.9140 356.210  c
24.2109 355.497 24.6041 354.968 25.0937 354.625  c
25.4791 354.354 25.8750 354.218 26.2812 354.218  c
26.9375 354.218 27.5260 354.552 28.0468 355.218  c
28.7031 356.052 29.0312 357.182 29.0312 358.609  c
29.0312 359.609 28.8880 360.458 28.6015 361.156  c
28.3151 361.854 27.9479 362.362 27.5000 362.679  c
27.0520 362.997 26.6250 363.156 26.2187 363.156  c
25.3958 363.156 24.7083 362.671 24.1562 361.703  c
23.6979 360.880 23.4687 359.895 23.4687 358.750  c
h
24.7187 358.906 m
24.7187 360.093 24.8645 361.062 25.1562 361.812  c
25.3958 362.437 25.7552 362.750 26.2343 362.750  c
26.4635 362.750 26.7005 362.648 26.9453 362.445  c
27.1901 362.242 27.3750 361.895 27.5000 361.406  c
27.6979 360.687 27.7968 359.661 27.7968 358.328  c
27.7968 357.349 27.6927 356.531 27.4843 355.875  c
27.3385 355.385 27.1406 355.041 26.8906 354.843  c
26.7239 354.708 26.5156 354.640 26.2656 354.640  c
25.9843 354.640 25.7291 354.765 25.5000 355.015  c
25.1979 355.369 24.9921 355.924 24.8828 356.679  c
24.7734 357.434 24.7187 358.177 24.7187 358.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 266.754 m
27.0000 266.754 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
24.5312 268.234 m
26.6250 267.218 l
26.8281 267.218 l
26.8281 274.484 l
26.8281 274.963 26.8489 275.263 26.8906 275.382  c
26.9322 275.502 27.0156 275.593 27.1406 275.656  c
27.2656 275.718 27.5208 275.755 27.9062 275.765  c
27.9062 276.000 l
24.6718 276.000 l
24.6718 275.765 l
25.0781 275.755 25.3411 275.718 25.4609 275.656  c
25.5807 275.593 25.6640 275.510 25.7109 275.406  c
25.7578 275.302 25.7812 274.994 25.7812 274.484  c
25.7812 269.843 l
25.7812 269.208 25.7604 268.802 25.7187 268.625  c
25.6875 268.489 25.6328 268.390 25.5546 268.328  c
25.4765 268.265 25.3802 268.234 25.2656 268.234  c
25.1093 268.234 24.8958 268.302 24.6250 268.437  c
24.5312 268.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 180.508 m
27.0000 180.508 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.9531 188.343 m
28.3593 190.000 l
23.2812 190.000 l
23.2812 189.765 l
24.7708 188.401 25.8203 187.286 26.4296 186.421  c
27.0390 185.557 27.3437 184.770 27.3437 184.062  c
27.3437 183.510 27.1770 183.059 26.8437 182.710  c
26.5104 182.362 26.1093 182.187 25.6406 182.187  c
25.2239 182.187 24.8463 182.309 24.5078 182.554  c
24.1692 182.799 23.9218 183.161 23.7656 183.640  c
23.5312 183.640 l
23.6354 182.859 23.9062 182.260 24.3437 181.843  c
24.7812 181.427 25.3281 181.218 25.9843 181.218  c
26.6822 181.218 27.2656 181.442 27.7343 181.890  c
28.2031 182.338 28.4375 182.864 28.4375 183.468  c
28.4375 183.906 28.3333 184.343 28.1250 184.781  c
27.8125 185.468 27.3072 186.192 26.6093 186.953  c
25.5572 188.109 24.8958 188.807 24.6250 189.046  c
26.8750 189.046 l
27.3333 189.046 27.6536 189.028 27.8359 188.992  c
28.0182 188.955 28.1849 188.885 28.3359 188.781  c
28.4869 188.677 28.6145 188.531 28.7187 188.343  c
28.9531 188.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 94.2627 m
27.0000 94.2627 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
23.6562 97.0312 m
23.9062 96.4479 24.2187 96.0000 24.5937 95.6875  c
24.9687 95.3750 25.4322 95.2187 25.9843 95.2187  c
26.6822 95.2187 27.2135 95.4427 27.5781 95.8906  c
27.8593 96.2239 28.0000 96.5781 28.0000 96.9531  c
28.0000 97.5885 27.6041 98.2395 26.8125 98.9062  c
27.3437 99.1145 27.7447 99.4114 28.0156 99.7968  c
28.2864 100.182 28.4218 100.635 28.4218 101.156  c
28.4218 101.895 28.1822 102.536 27.7031 103.078  c
27.0885 103.796 26.1979 104.156 25.0312 104.156  c
24.4479 104.156 24.0520 104.083 23.8437 103.937  c
23.6354 103.791 23.5312 103.635 23.5312 103.468  c
23.5312 103.343 23.5807 103.237 23.6796 103.148  c
23.7786 103.059 23.8958 103.015 24.0312 103.015  c
24.1354 103.015 24.2447 103.031 24.3593 103.062  c
24.4322 103.083 24.5963 103.158 24.8515 103.289  c
25.1067 103.419 25.2812 103.500 25.3750 103.531  c
25.5312 103.572 25.6979 103.593 25.8750 103.593  c
26.3020 103.593 26.6770 103.427 27.0000 103.093  c
27.3229 102.760 27.4843 102.364 27.4843 101.906  c
27.4843 101.572 27.4114 101.250 27.2656 100.937  c
27.1510 100.697 27.0260 100.515 26.8906 100.390  c
26.7135 100.224 26.4661 100.072 26.1484 99.9375  c
25.8307 99.8020 25.5052 99.7343 25.1718 99.7343  c
24.9687 99.7343 l
24.9687 99.5312 l
25.3020 99.4895 25.6380 99.3697 25.9765 99.1718  c
26.3151 98.9739 26.5599 98.7369 26.7109 98.4609  c
26.8619 98.1849 26.9375 97.8750 26.9375 97.5312  c
26.9375 97.1041 26.8020 96.7552 26.5312 96.4843  c
26.2604 96.2135 25.9218 96.0781 25.5156 96.0781  c
24.8593 96.0781 24.3125 96.4270 23.8750 97.1250  c
23.6562 97.0312 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 8.01705 m
27.0000 8.01705 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
29.0468 14.8281 m
29.0468 15.7343 l
27.8906 15.7343 l
27.8906 18.0000 l
26.8437 18.0000 l
26.8437 15.7343 l
23.2031 15.7343 l
23.2031 14.9218 l
27.2031 9.21875 l
27.8906 9.21875 l
27.8906 14.8281 l
29.0468 14.8281 l
h
26.8437 14.8281 m
26.8437 10.5468 l
23.8281 14.8281 l
26.8437 14.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 309.877 m
29.0000 309.877 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 223.631 m
29.0000 223.631 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 137.385 m
29.0000 137.385 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 51.1399 m
29.0000 51.1399 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
