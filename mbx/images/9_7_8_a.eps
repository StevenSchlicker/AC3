%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, August 22, 2015 2:03:53 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
newpath
9.50000 380.500 m
9.50000 9.01843 l
S
newpath
56.4991 380.500 m
56.4991 9.01843 l
S
newpath
103.498 380.500 m
103.498 9.01843 l
S
newpath
150.497 380.500 m
150.497 9.01843 l
S
newpath
197.496 380.500 m
197.496 9.01843 l
S
newpath
244.495 380.500 m
244.495 9.01843 l
S
newpath
291.495 380.500 m
291.495 9.01843 l
S
newpath
338.494 380.500 m
338.494 9.01843 l
S
newpath
385.493 380.500 m
385.493 9.01843 l
S
0.913725 0.913725 0.913725 RG
newpath
32.9995 380.500 m
32.9995 9.01843 l
S
newpath
79.9987 380.500 m
79.9987 9.01843 l
S
newpath
126.997 380.500 m
126.997 9.01843 l
S
newpath
173.997 380.500 m
173.997 9.01843 l
S
newpath
220.996 380.500 m
220.996 9.01843 l
S
newpath
267.995 380.500 m
267.995 9.01843 l
S
newpath
314.994 380.500 m
314.994 9.01843 l
S
newpath
361.993 380.500 m
361.993 9.01843 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
newpath
9.50000 380.500 m
385.493 380.500 l
S
newpath
9.50000 334.064 m
385.493 334.064 l
S
newpath
9.50000 287.629 m
385.493 287.629 l
S
newpath
9.50000 241.194 m
385.493 241.194 l
S
newpath
9.50000 194.759 m
385.493 194.759 l
S
newpath
9.50000 148.324 m
385.493 148.324 l
S
newpath
9.50000 101.888 m
385.493 101.888 l
S
newpath
9.50000 55.4536 m
385.493 55.4536 l
S
newpath
9.50000 9.01843 m
385.493 9.01843 l
S
0.913725 0.913725 0.913725 RG
newpath
9.50000 357.282 m
385.493 357.282 l
S
newpath
9.50000 310.847 m
385.493 310.847 l
S
newpath
9.50000 264.412 m
385.493 264.412 l
S
newpath
9.50000 217.976 m
385.493 217.976 l
S
newpath
9.50000 171.541 m
385.493 171.541 l
S
newpath
9.50000 125.106 m
385.493 125.106 l
S
newpath
9.50000 78.6712 m
385.493 78.6712 l
S
newpath
9.50000 32.2360 m
385.493 32.2360 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
9.50000 8.01844 376.993 372.481 rc
newpath
338.729 148.324 m
338.259 148.324 l
338.259 120.462 l
338.729 120.462 l
338.729 148.324 l
338.729 148.324 l
338.729 148.324 l
h
f
newpath
331.444 120.462 m
338.494 101.888 l
345.544 120.462 l
331.444 120.462 l
331.444 120.462 l
331.444 120.462 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
9.50000 8.01844 376.993 372.481 rc
newpath
338.494 148.091 m
338.494 148.556 l
310.294 148.556 l
310.294 148.091 l
338.494 148.091 l
338.494 148.091 l
338.494 148.091 l
h
f
newpath
310.294 155.289 m
291.495 148.324 l
310.294 141.358 l
310.294 155.289 l
310.294 155.289 l
310.294 155.289 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
9.50000 8.01844 376.993 372.481 rc
newpath
164.159 23.5549 m
150.497 9.01843 l
170.465 11.0950 l
164.159 23.5549 l
164.159 23.5549 l
164.159 23.5549 l
h
f
newpath
244.601 55.2459 m
244.390 55.6612 l
167.207 17.5326 l
167.417 17.1173 l
244.601 55.2459 l
244.601 55.2459 l
244.601 55.2459 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
9.50000 8.01844 376.993 372.481 rc
newpath
244.601 241.402 m
244.390 240.986 l
321.574 202.858 l
321.784 203.273 l
244.601 241.402 l
244.601 241.402 l
244.601 241.402 l
h
f
newpath
318.526 196.835 m
338.494 194.759 l
324.832 209.295 l
318.526 196.835 l
318.526 196.835 l
318.526 196.835 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
9.50000 8.01844 376.993 372.481 rc
newpath
244.495 55.2214 m
244.495 55.6858 l
216.296 55.6858 l
216.296 55.2214 l
244.495 55.2214 l
244.495 55.2214 l
244.495 55.2214 l
h
f
newpath
216.296 62.4189 m
197.496 55.4536 l
216.296 48.4883 l
216.296 62.4189 l
216.296 62.4189 l
216.296 62.4189 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
9.50000 8.01844 376.993 372.481 rc
newpath
244.495 240.962 m
244.495 241.426 l
216.296 241.426 l
216.296 240.962 l
244.495 240.962 l
244.495 240.962 l
244.495 240.962 l
h
f
newpath
216.296 248.159 m
197.496 241.194 l
216.296 234.229 l
216.296 248.159 l
216.296 248.159 l
216.296 248.159 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
9.50000 8.01844 376.993 372.481 rc
newpath
231.862 70.8719 m
244.495 55.4536 l
245.239 75.2771 l
231.862 70.8719 l
231.862 70.8719 l
231.862 70.8719 l
h
f
newpath
197.719 194.832 m
197.273 194.685 l
238.328 73.0011 l
238.773 73.1479 l
197.719 194.832 l
197.719 194.832 l
197.719 194.832 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
9.50000 8.01844 376.993 372.481 rc
newpath
318.429 147.589 m
338.494 148.324 l
322.888 160.805 l
318.429 147.589 l
318.429 147.589 l
318.429 147.589 l
h
f
newpath
197.571 194.979 m
197.422 194.538 l
320.585 153.977 l
320.733 154.417 l
197.571 194.979 l
197.571 194.979 l
197.571 194.979 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
9.50000 8.01844 376.993 372.481 rc
newpath
236.187 223.135 m
244.495 241.194 l
226.217 232.985 l
236.187 223.135 l
236.187 223.135 l
236.187 223.135 l
h
f
newpath
197.330 194.923 m
197.662 194.595 l
231.368 227.896 l
231.036 228.224 l
197.330 194.923 l
197.330 194.923 l
197.330 194.923 l
h
f
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
197.330 194.923 m
197.662 194.595 l
231.368 227.896 l
236.187 223.135 l
244.495 241.194 l
226.217 232.985 l
231.036 228.224 l
197.330 194.923 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
197.571 194.979 m
197.422 194.538 l
320.585 153.977 l
318.429 147.589 l
338.494 148.324 l
322.888 160.805 l
320.733 154.417 l
197.571 194.979 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
197.719 194.832 m
197.273 194.685 l
238.328 73.0011 l
231.862 70.8719 l
244.495 55.4536 l
245.239 75.2771 l
238.773 73.1479 l
197.719 194.832 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
244.495 240.962 m
244.495 241.426 l
216.296 241.426 l
216.296 248.159 l
197.496 241.194 l
216.296 234.229 l
216.296 240.962 l
244.495 240.962 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
244.495 55.2214 m
244.495 55.6858 l
216.296 55.6858 l
216.296 62.4189 l
197.496 55.4536 l
216.296 48.4883 l
216.296 55.2214 l
244.495 55.2214 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
244.601 241.402 m
244.390 240.986 l
321.574 202.858 l
318.526 196.835 l
338.494 194.759 l
324.832 209.295 l
321.784 203.273 l
244.601 241.402 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
244.601 55.2459 m
244.390 55.6612 l
167.207 17.5326 l
164.159 23.5549 l
150.497 9.01843 l
170.465 11.0950 l
167.417 17.1173 l
244.601 55.2459 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
338.494 148.091 m
338.494 148.556 l
310.294 148.556 l
310.294 155.289 l
291.495 148.324 l
310.294 141.358 l
310.294 148.091 l
338.494 148.091 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
8.50000 7.01844 378.993 374.481 rc
newpath
338.729 148.324 m
338.259 148.324 l
338.259 120.462 l
331.444 120.462 l
338.494 101.888 l
345.544 120.462 l
338.729 120.462 l
338.729 148.324 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
2 J
0 j
[ 1.00000 0 0 1.00000 334.494 144.324 ] concat
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
S
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
f
[ 1.00000 0 0 1.00000 -334.494 -144.324 ] concat
[ 1.00000 0 0 1.00000 240.495 51.4536 ] concat
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
S
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
f
[ 1.00000 0 0 1.00000 -240.495 -51.4536 ] concat
[ 1.00000 0 0 1.00000 240.495 237.194 ] concat
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
S
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
f
[ 1.00000 0 0 1.00000 -240.495 -237.194 ] concat
Q
q
2.00000 w
0 0 1.00000 RG
7.50000 6.01844 380.993 376.481 rc
newpath
6.39118 322.887 m
13.3480 321.049 l
20.4654 319.148 l
27.4815 317.253 l
34.6168 315.304 l
40.8330 313.588 l
47.7541 311.655 l
54.6217 309.714 l
61.1623 307.844 l
67.0357 306.146 l
73.9379 304.127 l
79.7154 302.416 l
86.3559 300.426 l
92.1617 298.665 l
98.4539 296.732 l
104.369 294.892 l
110.463 292.972 l
115.989 291.209 l
121.873 289.307 l
127.901 287.331 l
133.079 285.612 l
138.600 283.754 l
144.224 281.835 l
149.648 279.958 l
154.824 278.142 l
160.486 276.125 l
165.498 274.313 l
170.770 272.379 l
175.477 270.625 l
180.547 268.709 l
185.244 266.905 l
190.077 265.020 l
194.728 263.177 l
199.518 261.248 l
204.055 259.389 l
208.616 257.489 l
213.062 255.604 l
217.079 253.872 l
221.602 251.887 l
225.576 250.112 l
229.736 248.219 l
233.645 246.408 l
237.902 244.396 l
241.516 242.654 l
245.539 240.677 l
249.131 238.875 l
252.979 236.904 l
256.231 235.203 l
259.858 233.267 l
263.284 231.396 l
266.631 229.526 l
269.890 227.663 l
272.950 225.874 l
276.180 223.939 l
279.181 222.095 l
282.261 220.155 l
284.977 218.398 l
287.902 216.457 l
290.625 214.597 l
293.268 212.742 l
295.947 210.805 l
298.343 209.020 l
300.724 207.193 l
303.269 205.175 l
305.497 203.348 l
307.700 201.479 l
309.862 199.579 l
311.780 197.832 l
313.752 195.970 l
315.634 194.123 l
317.564 192.146 l
319.197 190.402 l
320.999 188.390 l
322.549 186.574 l
324.012 184.777 l
325.506 182.844 l
326.925 180.904 l
328.145 179.139 l
329.365 177.265 l
330.483 175.435 l
331.612 173.452 l
332.520 171.737 l
333.483 169.766 l
334.311 167.913 l
335.058 166.079 l
335.732 164.242 l
336.344 162.370 l
336.908 160.385 l
337.351 158.564 l
337.717 156.768 l
338.030 154.847 l
338.262 152.931 l
338.403 151.210 l
338.486 149.173 l
338.486 147.468 l
338.405 145.474 l
338.248 143.570 l
338.040 141.871 l
337.731 139.960 l
337.340 138.036 l
336.871 136.121 l
336.365 134.346 l
335.768 132.508 l
335.073 130.607 l
334.302 128.712 l
333.428 126.763 l
332.589 125.047 l
331.568 123.114 l
330.460 121.173 l
329.315 119.303 l
328.210 117.605 l
326.813 115.586 l
325.561 113.875 l
324.023 111.885 l
322.591 110.124 l
320.941 108.191 l
319.294 106.351 l
317.497 104.431 l
315.776 102.668 l
313.844 100.766 l
311.754 98.7908 l
309.865 97.0711 l
307.752 95.2137 l
305.491 93.2949 l
303.201 91.4178 l
300.912 89.6015 l
298.287 87.5849 l
295.852 85.7728 l
293.173 83.8381 l
290.675 82.0849 l
287.868 80.1682 l
285.153 78.3648 l
282.240 76.4797 l
279.317 74.6366 l
276.177 72.7071 l
273.077 70.8488 l
269.828 68.9483 l
266.529 67.0637 l
263.428 65.3318 l
259.795 63.3470 l
256.472 61.5717 l
252.854 59.6788 l
249.318 57.8672 l
245.307 55.8555 l
241.763 54.1136 l
237.661 52.1365 l
233.847 50.3346 l
229.595 48.3635 l
225.858 46.6629 l
221.526 44.7261 l
217.263 42.8552 l
212.926 40.9855 l
208.530 39.1227 l
204.236 37.3331 l
199.515 35.3985 l
194.939 33.5548 l
190.044 31.6143 l
185.542 29.8577 l
180.488 27.9163 l
175.570 26.0568 l
170.588 24.2018 l
165.306 22.2643 l
160.367 20.4797 l
155.238 18.6521 l
149.490 16.6342 l
144.209 14.8071 l
138.734 12.9386 l
133.087 11.0384 l
127.827 9.29180 l
122.147 7.42993 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
9.50000 194.759 m
385.493 194.759 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
284 218 14 17 rc
newpath
290.593 225.375 m
290.833 225.625 291.015 225.880 291.140 226.140  c
291.234 226.307 291.380 226.765 291.578 227.515  c
292.218 226.546 l
292.385 226.317 292.591 226.096 292.835 225.882  c
293.080 225.669 293.296 225.520 293.484 225.437  c
293.599 225.395 293.729 225.375 293.875 225.375  c
294.083 225.375 294.250 225.429 294.375 225.539  c
294.500 225.648 294.562 225.786 294.562 225.953  c
294.562 226.140 294.526 226.265 294.453 226.328  c
294.317 226.453 294.161 226.515 293.984 226.515  c
293.880 226.515 293.770 226.494 293.656 226.453  c
293.427 226.369 293.270 226.328 293.187 226.328  c
293.072 226.328 292.937 226.395 292.781 226.531  c
292.479 226.791 292.114 227.286 291.687 228.015  c
292.296 230.531 l
292.390 230.916 292.468 231.145 292.531 231.218  c
292.593 231.291 292.656 231.328 292.718 231.328  c
292.822 231.328 292.942 231.276 293.078 231.171  c
293.349 230.942 293.578 230.645 293.765 230.281  c
294.015 230.421 l
293.713 230.994 293.322 231.474 292.843 231.859  c
292.583 232.067 292.359 232.171 292.171 232.171  c
291.890 232.171 291.671 232.020 291.515 231.718  c
291.411 231.520 291.197 230.697 290.875 229.250  c
290.114 230.572 289.505 231.427 289.046 231.812  c
288.744 232.052 288.458 232.171 288.187 232.171  c
287.989 232.171 287.807 232.104 287.640 231.968  c
287.526 231.854 287.468 231.708 287.468 231.531  c
287.468 231.375 287.523 231.242 287.632 231.132  c
287.742 231.023 287.875 230.968 288.031 230.968  c
288.187 230.968 288.354 231.046 288.531 231.203  c
288.656 231.317 288.755 231.375 288.828 231.375  c
288.880 231.375 288.953 231.333 289.046 231.250  c
289.276 231.062 289.588 230.661 289.984 230.046  c
290.380 229.432 290.640 228.989 290.765 228.718  c
290.463 227.531 290.296 226.906 290.265 226.843  c
290.161 226.520 290.018 226.294 289.835 226.164  c
289.653 226.033 289.385 225.968 289.031 225.968  c
288.916 225.968 288.786 225.974 288.640 225.984  c
288.640 225.718 l
290.593 225.375 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
9.50000 194.759 m
9.50000 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 206 8 16 rc
newpath
18.4531 214.890 m
8.54687 214.890 l
8.54687 214.109 l
18.4531 214.109 l
18.4531 214.890 l
h
f
Q
newpath
22.9843 215.343 m
22.9843 216.375 l
21.6406 216.375 l
21.6406 219.000 l
20.4375 219.000 l
20.4375 216.375 l
16.2343 216.375 l
16.2343 215.437 l
20.8437 208.859 l
21.6406 208.859 l
21.6406 215.343 l
22.9843 215.343 l
h
20.4375 215.343 m
20.4375 210.406 l
16.9531 215.343 l
20.4375 215.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
56.4991 194.759 m
56.4991 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
53 206 8 16 rc
newpath
65.4531 214.890 m
55.5468 214.890 l
55.5468 214.109 l
65.4531 214.109 l
65.4531 214.890 l
h
f
Q
newpath
63.7656 210.953 m
64.0468 210.286 64.4036 209.770 64.8359 209.406  c
65.2682 209.041 65.8072 208.859 66.4531 208.859  c
67.2447 208.859 67.8541 209.119 68.2812 209.640  c
68.6041 210.026 68.7656 210.437 68.7656 210.875  c
68.7656 211.604 68.3125 212.354 67.4062 213.125  c
68.0104 213.364 68.4687 213.705 68.7812 214.148  c
69.0937 214.591 69.2500 215.114 69.2500 215.718  c
69.2500 216.572 68.9791 217.312 68.4375 217.937  c
67.7187 218.760 66.6875 219.171 65.3437 219.171  c
64.6666 219.171 64.2083 219.088 63.9687 218.921  c
63.7291 218.755 63.6093 218.578 63.6093 218.390  c
63.6093 218.244 63.6666 218.119 63.7812 218.015  c
63.8958 217.911 64.0312 217.859 64.1875 217.859  c
64.3125 217.859 64.4375 217.880 64.5625 217.921  c
64.6458 217.942 64.8359 218.028 65.1328 218.179  c
65.4296 218.330 65.6302 218.421 65.7343 218.453  c
65.9218 218.505 66.1145 218.531 66.3125 218.531  c
66.8125 218.531 67.2474 218.338 67.6171 217.953  c
67.9869 217.567 68.1718 217.114 68.1718 216.593  c
68.1718 216.208 68.0885 215.833 67.9218 215.468  c
67.7864 215.187 67.6458 214.979 67.5000 214.843  c
67.2916 214.645 67.0026 214.468 66.6328 214.312  c
66.2630 214.156 65.8906 214.078 65.5156 214.078  c
65.2812 214.078 l
65.2812 213.843 l
65.6666 213.802 66.0520 213.666 66.4375 213.437  c
66.8229 213.208 67.1041 212.932 67.2812 212.609  c
67.4583 212.286 67.5468 211.932 67.5468 211.546  c
67.5468 211.046 67.3906 210.640 67.0781 210.328  c
66.7656 210.015 66.3750 209.859 65.9062 209.859  c
65.1458 209.859 64.5104 210.265 64.0000 211.078  c
63.7656 210.953 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
103.498 194.759 m
103.498 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
100 206 8 16 rc
newpath
112.453 214.890 m
102.546 214.890 l
102.546 214.109 l
112.453 214.109 l
112.453 214.890 l
h
f
Q
newpath
116.875 217.093 m
116.187 219.000 l
110.328 219.000 l
110.328 218.734 l
112.046 217.161 113.257 215.875 113.960 214.875  c
114.664 213.875 115.015 212.963 115.015 212.140  c
115.015 211.515 114.822 211.000 114.437 210.593  c
114.052 210.187 113.588 209.984 113.046 209.984  c
112.567 209.984 112.132 210.127 111.742 210.414  c
111.351 210.700 111.062 211.119 110.875 211.671  c
110.609 211.671 l
110.734 210.765 111.049 210.070 111.554 209.585  c
112.059 209.101 112.687 208.859 113.437 208.859  c
114.250 208.859 114.924 209.119 115.460 209.640  c
115.997 210.161 116.265 210.770 116.265 211.468  c
116.265 211.968 116.151 212.474 115.921 212.984  c
115.557 213.776 114.968 214.609 114.156 215.484  c
112.947 216.817 112.187 217.619 111.875 217.890  c
114.468 217.890 l
115.000 217.890 115.372 217.872 115.585 217.835  c
115.799 217.799 115.992 217.721 116.164 217.601  c
116.335 217.481 116.484 217.312 116.609 217.093  c
116.875 217.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
150.497 194.759 m
150.497 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
147 206 8 16 rc
newpath
159.453 214.890 m
149.546 214.890 l
149.546 214.109 l
159.453 214.109 l
159.453 214.890 l
h
f
Q
newpath
158.765 210.046 m
161.171 208.859 l
161.421 208.859 l
161.421 217.250 l
161.421 217.802 161.445 218.148 161.492 218.289  c
161.539 218.429 161.635 218.536 161.781 218.609  c
161.927 218.682 162.224 218.724 162.671 218.734  c
162.671 219.000 l
158.937 219.000 l
158.937 218.734 l
159.406 218.724 159.708 218.682 159.843 218.609  c
159.979 218.536 160.072 218.440 160.125 218.320  c
160.177 218.200 160.203 217.843 160.203 217.250  c
160.203 211.890 l
160.203 211.161 160.182 210.697 160.140 210.500  c
160.099 210.343 160.033 210.229 159.945 210.156  c
159.856 210.083 159.750 210.046 159.625 210.046  c
159.437 210.046 159.187 210.119 158.875 210.265  c
158.765 210.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 194.759 m
197.496 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
193.546 212.093 m
193.546 210.958 193.716 209.981 194.054 209.164  c
194.393 208.346 194.849 207.739 195.421 207.343  c
195.859 207.020 196.312 206.859 196.781 206.859  c
197.541 206.859 198.224 207.250 198.828 208.031  c
199.588 208.989 199.968 210.291 199.968 211.937  c
199.968 213.093 199.802 214.072 199.468 214.875  c
199.135 215.677 198.710 216.260 198.195 216.625  c
197.679 216.989 197.182 217.171 196.703 217.171  c
195.755 217.171 194.968 216.614 194.343 215.500  c
193.812 214.552 193.546 213.416 193.546 212.093  c
h
194.984 212.281 m
194.984 213.645 195.151 214.760 195.484 215.625  c
195.765 216.354 196.182 216.718 196.734 216.718  c
196.994 216.718 197.265 216.599 197.546 216.359  c
197.828 216.119 198.041 215.724 198.187 215.171  c
198.416 214.328 198.531 213.140 198.531 211.609  c
198.531 210.484 198.411 209.541 198.171 208.781  c
198.005 208.218 197.781 207.822 197.500 207.593  c
197.302 207.427 197.057 207.343 196.765 207.343  c
196.442 207.343 196.151 207.494 195.890 207.796  c
195.536 208.203 195.296 208.841 195.171 209.710  c
195.046 210.580 194.984 211.437 194.984 212.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
244.495 194.759 m
244.495 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
247.765 210.046 m
250.171 208.859 l
250.421 208.859 l
250.421 217.250 l
250.421 217.802 250.445 218.148 250.492 218.289  c
250.539 218.429 250.635 218.536 250.781 218.609  c
250.927 218.682 251.224 218.724 251.671 218.734  c
251.671 219.000 l
247.937 219.000 l
247.937 218.734 l
248.406 218.724 248.708 218.682 248.843 218.609  c
248.979 218.536 249.072 218.440 249.125 218.320  c
249.177 218.200 249.203 217.843 249.203 217.250  c
249.203 211.890 l
249.203 211.161 249.182 210.697 249.140 210.500  c
249.099 210.343 249.033 210.229 248.945 210.156  c
248.856 210.083 248.750 210.046 248.625 210.046  c
248.437 210.046 248.187 210.119 247.875 210.265  c
247.765 210.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
291.495 194.759 m
291.495 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
299.875 217.093 m
299.187 219.000 l
293.328 219.000 l
293.328 218.734 l
295.046 217.161 296.257 215.875 296.960 214.875  c
297.664 213.875 298.015 212.963 298.015 212.140  c
298.015 211.515 297.822 211.000 297.437 210.593  c
297.052 210.187 296.588 209.984 296.046 209.984  c
295.567 209.984 295.132 210.127 294.742 210.414  c
294.351 210.700 294.062 211.119 293.875 211.671  c
293.609 211.671 l
293.734 210.765 294.049 210.070 294.554 209.585  c
295.059 209.101 295.687 208.859 296.437 208.859  c
297.250 208.859 297.924 209.119 298.460 209.640  c
298.997 210.161 299.265 210.770 299.265 211.468  c
299.265 211.968 299.151 212.474 298.921 212.984  c
298.557 213.776 297.968 214.609 297.156 215.484  c
295.947 216.817 295.187 217.619 294.875 217.890  c
297.468 217.890 l
298.000 217.890 298.372 217.872 298.585 217.835  c
298.799 217.799 298.992 217.721 299.164 217.601  c
299.335 217.481 299.484 217.312 299.609 217.093  c
299.875 217.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
338.494 194.759 m
338.494 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
340.765 210.953 m
341.046 210.286 341.403 209.770 341.835 209.406  c
342.268 209.041 342.807 208.859 343.453 208.859  c
344.244 208.859 344.854 209.119 345.281 209.640  c
345.604 210.026 345.765 210.437 345.765 210.875  c
345.765 211.604 345.312 212.354 344.406 213.125  c
345.010 213.364 345.468 213.705 345.781 214.148  c
346.093 214.591 346.250 215.114 346.250 215.718  c
346.250 216.572 345.979 217.312 345.437 217.937  c
344.718 218.760 343.687 219.171 342.343 219.171  c
341.666 219.171 341.208 219.088 340.968 218.921  c
340.729 218.755 340.609 218.578 340.609 218.390  c
340.609 218.244 340.666 218.119 340.781 218.015  c
340.895 217.911 341.031 217.859 341.187 217.859  c
341.312 217.859 341.437 217.880 341.562 217.921  c
341.645 217.942 341.835 218.028 342.132 218.179  c
342.429 218.330 342.630 218.421 342.734 218.453  c
342.921 218.505 343.114 218.531 343.312 218.531  c
343.812 218.531 344.247 218.338 344.617 217.953  c
344.987 217.567 345.171 217.114 345.171 216.593  c
345.171 216.208 345.088 215.833 344.921 215.468  c
344.786 215.187 344.645 214.979 344.500 214.843  c
344.291 214.645 344.002 214.468 343.632 214.312  c
343.263 214.156 342.890 214.078 342.515 214.078  c
342.281 214.078 l
342.281 213.843 l
342.666 213.802 343.052 213.666 343.437 213.437  c
343.822 213.208 344.104 212.932 344.281 212.609  c
344.458 212.286 344.546 211.932 344.546 211.546  c
344.546 211.046 344.390 210.640 344.078 210.328  c
343.765 210.015 343.375 209.859 342.906 209.859  c
342.145 209.859 341.510 210.265 341.000 211.078  c
340.765 210.953 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
385.493 194.759 m
385.493 198.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
393.984 215.343 m
393.984 216.375 l
392.640 216.375 l
392.640 219.000 l
391.437 219.000 l
391.437 216.375 l
387.234 216.375 l
387.234 215.437 l
391.843 208.859 l
392.640 208.859 l
392.640 215.343 l
393.984 215.343 l
h
391.437 215.343 m
391.437 210.406 l
387.953 215.343 l
391.437 215.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
32.9995 194.759 m
32.9995 196.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
79.9987 194.759 m
79.9987 196.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
126.997 194.759 m
126.997 196.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
173.997 194.759 m
173.997 196.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
220.996 194.759 m
220.996 196.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
267.995 194.759 m
267.995 196.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
314.994 194.759 m
314.994 196.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
361.993 194.759 m
361.993 196.759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
197.496 380.500 m
197.496 9.01843 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
155 93 14 17 rc
newpath
161.390 100.375 m
161.557 100.656 161.671 100.919 161.734 101.164  c
161.796 101.408 161.864 101.895 161.937 102.625  c
162.250 106.218 l
162.541 105.875 162.968 105.317 163.531 104.546  c
163.791 104.182 164.119 103.677 164.515 103.031  c
164.755 102.645 164.906 102.375 164.968 102.218  c
164.989 102.135 165.000 102.052 165.000 101.968  c
165.000 101.916 164.984 101.875 164.953 101.843  c
164.921 101.812 164.833 101.773 164.687 101.726  c
164.541 101.679 164.421 101.593 164.328 101.468  c
164.234 101.343 164.187 101.197 164.187 101.031  c
164.187 100.833 164.244 100.674 164.359 100.554  c
164.474 100.434 164.619 100.375 164.796 100.375  c
165.015 100.375 165.200 100.463 165.351 100.640  c
165.502 100.817 165.578 101.062 165.578 101.375  c
165.578 101.760 165.445 102.200 165.179 102.695  c
164.914 103.190 164.406 103.950 163.656 104.976  c
162.906 106.002 161.994 107.119 160.921 108.328  c
160.192 109.161 159.648 109.687 159.289 109.906  c
158.929 110.125 158.625 110.234 158.375 110.234  c
158.218 110.234 158.083 110.177 157.968 110.062  c
157.854 109.947 157.796 109.817 157.796 109.671  c
157.796 109.474 157.877 109.296 158.039 109.140  c
158.200 108.984 158.369 108.906 158.546 108.906  c
158.651 108.906 158.734 108.932 158.796 108.984  c
158.838 109.005 158.882 109.072 158.929 109.187  c
158.976 109.302 159.015 109.380 159.046 109.421  c
159.078 109.442 159.109 109.453 159.140 109.453  c
159.171 109.453 159.224 109.427 159.296 109.375  c
159.567 109.208 159.880 108.947 160.234 108.593  c
160.703 108.114 161.046 107.724 161.265 107.421  c
160.859 102.781 l
160.796 102.010 160.695 101.541 160.554 101.375  c
160.414 101.208 160.182 101.125 159.859 101.125  c
159.755 101.125 159.572 101.140 159.312 101.171  c
159.250 100.906 l
161.390 100.375 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
197.496 380.500 m
193.496 380.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 378 8 16 rc
newpath
190.453 386.890 m
180.546 386.890 l
180.546 386.109 l
190.453 386.109 l
190.453 386.890 l
h
f
Q
newpath
194.984 387.343 m
194.984 388.375 l
193.640 388.375 l
193.640 391.000 l
192.437 391.000 l
192.437 388.375 l
188.234 388.375 l
188.234 387.437 l
192.843 380.859 l
193.640 380.859 l
193.640 387.343 l
194.984 387.343 l
h
192.437 387.343 m
192.437 382.406 l
188.953 387.343 l
192.437 387.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 334.064 m
193.496 334.064 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 332 8 16 rc
newpath
190.453 340.890 m
180.546 340.890 l
180.546 340.109 l
190.453 340.109 l
190.453 340.890 l
h
f
Q
newpath
188.765 336.953 m
189.046 336.286 189.403 335.770 189.835 335.406  c
190.268 335.041 190.807 334.859 191.453 334.859  c
192.244 334.859 192.854 335.119 193.281 335.640  c
193.604 336.026 193.765 336.437 193.765 336.875  c
193.765 337.604 193.312 338.354 192.406 339.125  c
193.010 339.364 193.468 339.705 193.781 340.148  c
194.093 340.591 194.250 341.114 194.250 341.718  c
194.250 342.572 193.979 343.312 193.437 343.937  c
192.718 344.760 191.687 345.171 190.343 345.171  c
189.666 345.171 189.208 345.088 188.968 344.921  c
188.729 344.755 188.609 344.578 188.609 344.390  c
188.609 344.244 188.666 344.119 188.781 344.015  c
188.895 343.911 189.031 343.859 189.187 343.859  c
189.312 343.859 189.437 343.880 189.562 343.921  c
189.645 343.942 189.835 344.028 190.132 344.179  c
190.429 344.330 190.630 344.421 190.734 344.453  c
190.921 344.505 191.114 344.531 191.312 344.531  c
191.812 344.531 192.247 344.338 192.617 343.953  c
192.987 343.567 193.171 343.114 193.171 342.593  c
193.171 342.208 193.088 341.833 192.921 341.468  c
192.786 341.187 192.645 340.979 192.500 340.843  c
192.291 340.645 192.002 340.468 191.632 340.312  c
191.263 340.156 190.890 340.078 190.515 340.078  c
190.281 340.078 l
190.281 339.843 l
190.666 339.802 191.052 339.666 191.437 339.437  c
191.822 339.208 192.104 338.932 192.281 338.609  c
192.458 338.286 192.546 337.932 192.546 337.546  c
192.546 337.046 192.390 336.640 192.078 336.328  c
191.765 336.015 191.375 335.859 190.906 335.859  c
190.145 335.859 189.510 336.265 189.000 337.078  c
188.765 336.953 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 287.629 m
193.496 287.629 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 285 8 16 rc
newpath
190.453 293.890 m
180.546 293.890 l
180.546 293.109 l
190.453 293.109 l
190.453 293.890 l
h
f
Q
newpath
194.875 296.093 m
194.187 298.000 l
188.328 298.000 l
188.328 297.734 l
190.046 296.161 191.257 294.875 191.960 293.875  c
192.664 292.875 193.015 291.963 193.015 291.140  c
193.015 290.515 192.822 290.000 192.437 289.593  c
192.052 289.187 191.588 288.984 191.046 288.984  c
190.567 288.984 190.132 289.127 189.742 289.414  c
189.351 289.700 189.062 290.119 188.875 290.671  c
188.609 290.671 l
188.734 289.765 189.049 289.070 189.554 288.585  c
190.059 288.101 190.687 287.859 191.437 287.859  c
192.250 287.859 192.924 288.119 193.460 288.640  c
193.997 289.161 194.265 289.770 194.265 290.468  c
194.265 290.968 194.151 291.474 193.921 291.984  c
193.557 292.776 192.968 293.609 192.156 294.484  c
190.947 295.817 190.187 296.619 189.875 296.890  c
192.468 296.890 l
193.000 296.890 193.372 296.872 193.585 296.835  c
193.799 296.799 193.992 296.721 194.164 296.601  c
194.335 296.481 194.484 296.312 194.609 296.093  c
194.875 296.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 241.194 m
193.496 241.194 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 239 8 16 rc
newpath
190.453 247.890 m
180.546 247.890 l
180.546 247.109 l
190.453 247.109 l
190.453 247.890 l
h
f
Q
newpath
189.765 243.046 m
192.171 241.859 l
192.421 241.859 l
192.421 250.250 l
192.421 250.802 192.445 251.148 192.492 251.289  c
192.539 251.429 192.635 251.536 192.781 251.609  c
192.927 251.682 193.224 251.724 193.671 251.734  c
193.671 252.000 l
189.937 252.000 l
189.937 251.734 l
190.406 251.724 190.708 251.682 190.843 251.609  c
190.979 251.536 191.072 251.440 191.125 251.320  c
191.177 251.200 191.203 250.843 191.203 250.250  c
191.203 244.890 l
191.203 244.161 191.182 243.697 191.140 243.500  c
191.099 243.343 191.033 243.229 190.945 243.156  c
190.856 243.083 190.750 243.046 190.625 243.046  c
190.437 243.046 190.187 243.119 189.875 243.265  c
189.765 243.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 194.759 m
193.496 194.759 l
S
Q
q
0 w
newpath
197.496 148.324 m
193.496 148.324 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.765 150.046 m
192.171 148.859 l
192.421 148.859 l
192.421 157.250 l
192.421 157.802 192.445 158.148 192.492 158.289  c
192.539 158.429 192.635 158.536 192.781 158.609  c
192.927 158.682 193.224 158.724 193.671 158.734  c
193.671 159.000 l
189.937 159.000 l
189.937 158.734 l
190.406 158.724 190.708 158.682 190.843 158.609  c
190.979 158.536 191.072 158.440 191.125 158.320  c
191.177 158.200 191.203 157.843 191.203 157.250  c
191.203 151.890 l
191.203 151.161 191.182 150.697 191.140 150.500  c
191.099 150.343 191.033 150.229 190.945 150.156  c
190.856 150.083 190.750 150.046 190.625 150.046  c
190.437 150.046 190.187 150.119 189.875 150.265  c
189.765 150.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 101.888 m
193.496 101.888 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
194.875 110.093 m
194.187 112.000 l
188.328 112.000 l
188.328 111.734 l
190.046 110.161 191.257 108.875 191.960 107.875  c
192.664 106.875 193.015 105.963 193.015 105.140  c
193.015 104.515 192.822 104.000 192.437 103.593  c
192.052 103.187 191.588 102.984 191.046 102.984  c
190.567 102.984 190.132 103.127 189.742 103.414  c
189.351 103.700 189.062 104.119 188.875 104.671  c
188.609 104.671 l
188.734 103.765 189.049 103.070 189.554 102.585  c
190.059 102.101 190.687 101.859 191.437 101.859  c
192.250 101.859 192.924 102.119 193.460 102.640  c
193.997 103.161 194.265 103.770 194.265 104.468  c
194.265 104.968 194.151 105.474 193.921 105.984  c
193.557 106.776 192.968 107.609 192.156 108.484  c
190.947 109.817 190.187 110.619 189.875 110.890  c
192.468 110.890 l
193.000 110.890 193.372 110.872 193.585 110.835  c
193.799 110.799 193.992 110.721 194.164 110.601  c
194.335 110.481 194.484 110.312 194.609 110.093  c
194.875 110.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 55.4536 m
193.496 55.4536 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
188.765 57.9531 m
189.046 57.2864 189.403 56.7708 189.835 56.4062  c
190.268 56.0416 190.807 55.8593 191.453 55.8593  c
192.244 55.8593 192.854 56.1197 193.281 56.6406  c
193.604 57.0260 193.765 57.4375 193.765 57.8750  c
193.765 58.6041 193.312 59.3541 192.406 60.1250  c
193.010 60.3645 193.468 60.7057 193.781 61.1484  c
194.093 61.5911 194.250 62.1145 194.250 62.7187  c
194.250 63.5729 193.979 64.3125 193.437 64.9375  c
192.718 65.7604 191.687 66.1718 190.343 66.1718  c
189.666 66.1718 189.208 66.0885 188.968 65.9218  c
188.729 65.7552 188.609 65.5781 188.609 65.3906  c
188.609 65.2447 188.666 65.1197 188.781 65.0156  c
188.895 64.9114 189.031 64.8593 189.187 64.8593  c
189.312 64.8593 189.437 64.8802 189.562 64.9218  c
189.645 64.9427 189.835 65.0286 190.132 65.1796  c
190.429 65.3307 190.630 65.4218 190.734 65.4531  c
190.921 65.5052 191.114 65.5312 191.312 65.5312  c
191.812 65.5312 192.247 65.3385 192.617 64.9531  c
192.987 64.5677 193.171 64.1145 193.171 63.5937  c
193.171 63.2083 193.088 62.8333 192.921 62.4687  c
192.786 62.1875 192.645 61.9791 192.500 61.8437  c
192.291 61.6458 192.002 61.4687 191.632 61.3125  c
191.263 61.1562 190.890 61.0781 190.515 61.0781  c
190.281 61.0781 l
190.281 60.8437 l
190.666 60.8020 191.052 60.6666 191.437 60.4375  c
191.822 60.2083 192.104 59.9322 192.281 59.6093  c
192.458 59.2864 192.546 58.9322 192.546 58.5468  c
192.546 58.0468 192.390 57.6406 192.078 57.3281  c
191.765 57.0156 191.375 56.8593 190.906 56.8593  c
190.145 56.8593 189.510 57.2656 189.000 58.0781  c
188.765 57.9531 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 9.01843 m
193.496 9.01843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
194.984 16.3437 m
194.984 17.3750 l
193.640 17.3750 l
193.640 20.0000 l
192.437 20.0000 l
192.437 17.3750 l
188.234 17.3750 l
188.234 16.4375 l
192.843 9.85937 l
193.640 9.85937 l
193.640 16.3437 l
194.984 16.3437 l
h
192.437 16.3437 m
192.437 11.4062 l
188.953 16.3437 l
192.437 16.3437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 357.282 m
195.496 357.282 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 310.847 m
195.496 310.847 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 264.412 m
195.496 264.412 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 217.976 m
195.496 217.976 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 171.541 m
195.496 171.541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 125.106 m
195.496 125.106 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 78.6712 m
195.496 78.6712 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.496 32.2360 m
195.496 32.2360 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
